/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AccountManager.java
 *
 * Created on 2-jan-2011, 17:27:09
 */

package view;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.MainApplication;
import model.User;

/**
 *
 * @author Dark
 */
public class AccountManager extends javax.swing.JPanel {

    private int userID;

    /** Creates new form AccountManager */
    public AccountManager() {
        initComponents();
        fillUserTable();
        addChangeListener();
    }

    private void addChangeListener() {
        ChangeListener listen = new ChangeListener();
        listen.start();
    }

    private void fillUserTable() {
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        for(User user: MainApplication.getQueryManager().getUsers())
        {
            model.addRow(new Object[]{
                user.getId(), user.getGebruikersnaam(), user.getWachtwoord()
            });
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addUser = new javax.swing.JButton();
        changeUser = new javax.swing.JButton();
        deleteUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();

        addUser.setText("Add user");
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });
        jPanel1.add(addUser);

        changeUser.setText("Change user");
        changeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeUserActionPerformed(evt);
            }
        });
        jPanel1.add(changeUser);

        deleteUser.setText("Delete user");
        deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserActionPerformed(evt);
            }
        });
        jPanel1.add(deleteUser);

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "username", "password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void changeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeUserActionPerformed

    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addUserActionPerformed

    private void deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserActionPerformed
        User user = MainApplication.getQueryManager().getUser(userID);
        int choice = JOptionPane.showConfirmDialog(
            null,
            "Are you sure you want to remove " + user.getGebruikersnaam() + " ?",
            "Warning!",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (choice == JOptionPane.YES_OPTION)
        {
            MainApplication.getQueryManager().deleteUser(userID);
            MainApplication.getInstance().showPanel(new AccountManager());
        }
    }//GEN-LAST:event_deleteUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUser;
    private javax.swing.JButton changeUser;
    private javax.swing.JButton deleteUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables

    private class ChangeListener extends Thread {
        public ChangeListener() {
        }

        @Override
        public void run() {
            while (true)
            {
                try {
                    if (userTable.getSelectedColumn() != -1)
                    {
                        userID = Integer.parseInt(userTable.getModel().getValueAt(userTable.getSelectedRow(), 0).toString());
                        changeUser.setEnabled(true);
                        deleteUser.setEnabled(true);
                    }
                    else
                    {
                        changeUser.setEnabled(false);
                        deleteUser.setEnabled(false);
                    }
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(AccountManager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
}
